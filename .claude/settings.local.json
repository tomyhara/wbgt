{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(powershell.exe:*)",
      "Bash(cat:*)",
      "Bash(sed:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(python3:*)",
      "Bash(pip3 install:*)",
      "Bash(timeout 10 python3 src/wbgt_kiosk_en.py --gui)",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(./scripts/download_jma_data.sh:*)",
      "Bash(./scripts/download_wbgt_data.sh:*)",
      "Bash(./scripts/run_with_csv.sh:*)",
      "Bash(./scripts/download_all_data.sh:*)",
      "Bash(./scripts/wbgt.sh:*)",
      "Bash(find:*)",
      "Bash(rm:*)",
      "Bash(./scripts/run_wbgt.sh:*)",
      "Bash(./scripts/run_wbgt_en.sh:*)",
      "Bash(timeout:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(ls:*)",
      "WebFetch(domain:www.jma.go.jp)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(gtimeout:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(WBGT_CSV_MODE=1 python3 src/wbgt_kiosk.py --demo)",
      "Bash(WBGT_CSV_MODE=1 python3 src/wbgt_kiosk_en.py --demo)",
      "Bash(WBGT_CSV_MODE=1 timeout 10s python3 src/wbgt_kiosk_en.py --demo)",
      "Bash(WBGT_CSV_MODE=true python3 src/wbgt_kiosk_en.py)",
      "Bash(FORCE_CSV_MODE=1 timeout 10 python3 src/wbgt_kiosk_en.py)",
      "Bash(FORCE_CSV_MODE=1 python3 src/wbgt_kiosk_en.py)",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nfrom src.wbgt_kiosk_en import WBGTHeatStrokeKioskEN\nimport src.config_en as config\n\nkiosk = WBGTHeatStrokeKioskEN()\ndata = kiosk.fetch_data()\nif data:\n    for location_data in data:\n        print(f''=== {location_data[\"\"name\"\"]} ==='')\n        print(f''Weather: {location_data.get(\"\"weather_desc\"\", \"\"N/A\"\")}'')\n        print(f''Temperature: {location_data.get(\"\"temperature\"\", \"\"N/A\"\")}°C'')\n        print(f''WBGT: {location_data.get(\"\"wbgt\"\", \"\"N/A\"\")}°C'')\n        print(f''Alert: {location_data.get(\"\"alert_data\"\", {}).get(\"\"status\"\", \"\"N/A\"\")}'')\n        print()\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nfrom wbgt_kiosk_en import WBGTHeatStrokeKioskEN\nimport config_en as config\n\nkiosk = WBGTHeatStrokeKioskEN()\ndata = kiosk.fetch_data()\nif data:\n    for location_data in data:\n        print(f''=== {location_data[\"\"name\"\"]} ==='')\n        print(f''Weather: {location_data.get(\"\"weather_desc\"\", \"\"N/A\"\")}'')\n        print(f''Temperature: {location_data.get(\"\"temperature\"\", \"\"N/A\"\")}°C'')\n        print(f''WBGT: {location_data.get(\"\"wbgt\"\", \"\"N/A\"\")}°C'')\n        print(f''Alert: {location_data.get(\"\"alert_data\"\", {}).get(\"\"status\"\", \"\"N/A\"\")}'')\n        print()\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nfrom wbgt_kiosk_en import WBGTKioskEN\nimport config_en as config\n\nkiosk = WBGTKioskEN()\ndata = kiosk.fetch_data()\nif data:\n    for location_data in data:\n        print(f''=== {location_data[\"\"name\"\"]} ==='')\n        print(f''Weather: {location_data.get(\"\"weather_desc\"\", \"\"N/A\"\")}'')\n        print(f''Temperature: {location_data.get(\"\"temperature\"\", \"\"N/A\"\")}°C'')\n        print(f''WBGT: {location_data.get(\"\"wbgt\"\", \"\"N/A\"\")}°C'')\n        print(f''Alert: {location_data.get(\"\"alert_data\"\", {}).get(\"\"status\"\", \"\"N/A\"\")}'')\n        print()\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nimport sys\nsys.path.append(''/Users/haradatomohiro/Desktop/workspace/wbgt/setup'')\nfrom wbgt_kiosk_en import WBGTKioskEN\n\nkiosk = WBGTKioskEN()\ndata = kiosk.fetch_data()\nprint(''Fetched data:'', data is not None)\nif data:\n    print(''Number of locations:'', len(data))\n    for i, location_data in enumerate(data):\n        print(f''Location {i+1}: {location_data.get(\"\"name\"\", \"\"N/A\"\")}'')\n        print(f''  Has weather: {\"\"weather_desc\"\" in location_data}'')\n        print(f''  Has temperature: {\"\"temperature\"\" in location_data}'')\n        print(f''  Has WBGT: {\"\"wbgt\"\" in location_data}'')\n        print(f''  Has alert: {\"\"alert_data\"\" in location_data}'')\n        if i == 0:  # Show detailed data for first location\n            for key, value in location_data.items():\n                print(f''  {key}: {value}'')\n        print()\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nimport sys\nsys.path.append(''/Users/haradatomohiro/Desktop/workspace/wbgt/setup'')\nfrom wbgt_kiosk_en import WBGTKioskEN\n\nkiosk = WBGTKioskEN()\nprint(''Calling update_data()...'')\nkiosk.update_data()\nprint(''Data updated successfully'')\nprint(''Locations count:'', len(kiosk.locations) if hasattr(kiosk, ''locations'') else ''No locations attr'')\nif hasattr(kiosk, ''locations'') and kiosk.locations:\n    location = kiosk.locations[0]\n    print(''First location keys:'', list(location.keys()))\n    print(''Name:'', location.get(''name'', ''N/A''))\n    print(''Weather desc:'', location.get(''weather_desc'', ''N/A''))\n    print(''Temperature:'', location.get(''temperature'', ''N/A''))\n    print(''WBGT:'', location.get(''wbgt'', ''N/A''))\n    print(''Alert data:'', location.get(''alert_data'', ''N/A''))\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nimport sys\nsys.path.append(''/Users/haradatomohiro/Desktop/workspace/wbgt/setup'')\nfrom wbgt_kiosk_en import WBGTKioskEN\n\nkiosk = WBGTKioskEN()\nprint(''Calling update_data()...'')\nkiosk.update_data()\nprint(''Data updated successfully'')\nprint(''Locations data count:'', len(kiosk.locations_data) if hasattr(kiosk, ''locations_data'') else ''No locations_data attr'')\nif hasattr(kiosk, ''locations_data'') and kiosk.locations_data:\n    location_data = kiosk.locations_data[0]\n    print(''First location_data keys:'', list(location_data.keys()))\n    print(''Location name:'', location_data[''location''].get(''name'', ''N/A''))\n    print(''Weather data available:'', location_data[''weather_data''] is not None)\n    print(''Alert data available:'', location_data[''alert_data''] is not None)\n    print(''WBGT data available:'', location_data[''env_wbgt_data''] is not None)\n    if location_data[''weather_data'']:\n        weather_keys = list(location_data[''weather_data''].keys())\n        print(''Weather data keys:'', weather_keys)\n        print(''Temperature:'', location_data[''weather_data''].get(''temperature'', ''N/A''))\n        print(''Weather desc:'', location_data[''weather_data''].get(''weather_desc'', ''N/A''))\n        print(''WBGT:'', location_data[''weather_data''].get(''wbgt'', ''N/A''))\n    if location_data[''alert_data'']:\n        print(''Alert status:'', location_data[''alert_data''].get(''status'', ''N/A''))\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nimport sys\nsys.path.append(''/Users/haradatomohiro/Desktop/workspace/wbgt/setup'')\nfrom wbgt_kiosk_en import WBGTKioskEN\n\nkiosk = WBGTKioskEN()\nprint(''Calling update_data()...'')\nkiosk.update_data()\nprint(''Data updated successfully'')\nprint(''Locations data count:'', len(kiosk.locations_data) if hasattr(kiosk, ''locations_data'') else ''No locations_data attr'')\nif hasattr(kiosk, ''locations_data'') and kiosk.locations_data:\n    location_data = kiosk.locations_data[0]\n    print(''First location_data keys:'', list(location_data.keys()))\n    print(''Location name:'', location_data[''location''].get(''name'', ''N/A''))\n    print(''Weather data available:'', location_data[''weather_data''] is not None)\n    print(''Alert data available:'', location_data[''alert_data''] is not None)\n    print(''WBGT data available:'', location_data[''env_wbgt_data''] is not None)\n    if location_data[''weather_data'']:\n        weather_keys = list(location_data[''weather_data''].keys())\n        print(''Weather data keys:'', weather_keys)\n        print(''Temperature:'', location_data[''weather_data''].get(''temperature'', ''N/A''))\n        print(''Weather desc:'', location_data[''weather_data''].get(''weather_desc'', ''N/A''))\n        print(''WBGT:'', location_data[''weather_data''].get(''wbgt'', ''N/A''))\n    if location_data[''alert_data'']:\n        print(''Alert status:'', location_data[''alert_data''].get(''status'', ''N/A''))\n\")",
      "Bash(FORCE_CSV_MODE=1 python3 -c \"\nimport sys\nsys.path.append(''/Users/haradatomohiro/Desktop/workspace/wbgt/setup'')\nfrom wbgt_kiosk_en import WBGTKioskEN\n\nkiosk = WBGTKioskEN()\nprint(''Calling update_data()...'')\nkiosk.update_data()\nprint(''Data updated successfully'')\nif hasattr(kiosk, ''locations_data'') and kiosk.locations_data:\n    location_data = kiosk.locations_data[0]\n    weather_data = location_data[''weather_data'']\n    alert_data = location_data[''alert_data'']\n    print()\n    print(''=== WEATHER DATA ==='')\n    print(''weather_description:'', weather_data.get(''weather_description'', ''N/A''))\n    print(''temperature:'', weather_data.get(''temperature'', ''N/A''))\n    print(''wbgt:'', weather_data.get(''wbgt'', ''N/A''))\n    print()\n    print(''=== ALERT DATA ==='')\n    if alert_data:\n        for key, value in alert_data.items():\n            print(f''{key}: {value}'')\n    else:\n        print(''Alert data is None'')\n\")"
    ],
    "deny": []
  }
}